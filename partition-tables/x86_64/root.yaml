otk.define:
  filesystem:
    # Filesystems and partition tables are highly particular to each image build tool, this is specifically for
    # `osbuild` but perhaps a common base can be found later on to share (some of) these values.
    osbuild:
      otk.external.osbuild-gen-partition-table:
        modifications:
        properties:
          type: gpt
          bios: false
          default_size: "5 GiB"
          uuid: D209C89E-EA5E-4FBD-B161-B461CCE297E0
          #start_offset: "8 MiB"
          create:
            bios_boot_partition: false
            esp_partition: true
            esp_partition_size: "1 GiB"
        partitions:
          - name: boot
            mountpoint: /boot
            label: boot
            size: "500 MiB"
            type: "ext4"
            fs_mntops: defaults
            # XXX: comes from DDI -> XBOOTLDR
            part_type: BC13C2FF-59E6-4262-A352-B275FD6F7172
            part_uuid: CB07C243-BC44-4717-853E-28852021225B
          - name: root
            mountpoint: /
            label: root
            type: "ext4"
            size: "2 GiB"
            fs_mntops: defaults
            # XXX: comes from DDI -> root-x86_64
            # XXX: should we derive this automatically from the mountpoint?
            part_type: 4f68bce3-e8cd-4db1-96e7-fbcaf984b709
            part_uuid: 6264D520-3FB9-423F-8AB8-7A0A8E3D3562
          - name: srv
            mountpoint: /srv
            label: srv
            type: "ext4"
            size: "1 GiB"
            fs_mntops: defaults
            # XXX: comes from DDI -> root-x86_64
            # XXX: should we derive this automatically from the mountpoint?
            part_type: 3b8f8425-20e0-4f3b-907f-1a25a76f98e8
            part_uuid: 8e507304-e459-4211-b7a0-4cb88a7e9232
    # XXX: it would be nicer if the "fs_options" could be part of their
    # stages directly without this indirection.
    fs_options:
      otk.external.osbuild-make-partition-mounts-devices:
        ${filesystem.osbuild}
